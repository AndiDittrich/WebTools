<?php
    $title = 'Javascript Password Generator';
    $subtitle = 'Generate strong, random passwords easily on the client-side';
    include('layout/header.phtml');
?>
    <div class="container">
        <p>
            <button type="button" class="btn btn-large btn-success pull-right" id="start">Generate <span class="glyphicon glyphicon-console"></span></button>
        </p>
        <hr />

        <div class="input-group" style="width: 50%;margin-left: 25%">
            <div class="input-group-addon"><strong>Generator Mode</strong></div>
            <select size="1" id="presetList" class="form-control">
                <option value="s12">Server(12) - (Random Chars)</option>
                <option value="s18">Server(18) - (Random Chars)</option>
                <option value="s26">Server(26) - (Random Chars)</option>
                <option value="h1">Human (Short) - (Words + Random Chars)</option>
                <option value="h2" selected="selected">Human (Long) - (Words + Random Chars)</option>
                <option value="h3">Human (Leetspeak Short) - (Nato + Random Chars)</option>
                <option value="h4">Human (Leetspeak Long) - (Words + Random Chars)</option>
                <option value="i12">Internet(12) - [az09]</option>
                <option value="i16">Internet(16) - [AZaz09X]</option>
                <option value="i22">Internet(22) - [AZaz09X]</option>
                <option value="n8">Numbers(8) XXXX-XXXX</option>
                <option value="n12">Numbers(12) XXXX-XXXX-XXXX</option>
            </select>
        </div>

        <hr />

        <h3 class="left">Password suggestions</h3>
        <textarea class="form-control" rows="15" id="output"></textarea>
    </div>

    <?php include('layout/footer.phtml') ?>
   
    <script type="text/javascript">
        window.addEvent('domready', function(){
            // character classes
            var cc_special = ['#', '.', ':', ',', ';', '-', '_', '+', '~', '*', '?', '}', '=', ']', ')', '[', '(', '{', '/', '&', '%', '$', '§', '!'];
            var cc_numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
            var cc_general_uc = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',      'J', 'K', 'L', 'M', 'N',      'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
            var cc_general_lc = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',      'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
            var cc_nato = ['ALFA','BRAVO','CHARLIE','DELTA','ECHO','FOXTROT','GOLF','HOTEL','INDIA','JULIETT','KILO','LIMA','MIKE','NOVEMBER','OSCAR','PAPA','QUEBEC','ROMEO','SIERRA','TANGO','UNIFORM','VICTOR','WHISKEY','XRAY','YANKEE','ZULU'];
            var cc_numberstext = ['ZERO', 'ONE', 'TWO', 'THREE', 'FOUR', 'FIVE', 'SIX', 'SEVEN', 'EIGHT', 'NINE'];
            var cc_greek = ['ALPHA', 'BETA', 'GAMMA', 'DELTA', 'EPSILON', 'ZETA', 'ETA', 'THETA', 'IOTA', 'KAPPA', 'LAMBDA', 'MU', 'NU', 'XI', 'OMICRON', 'PI', 'RHO', 'SIGMA', 'TAU', 'UPSILON', 'PHI', 'CHI', 'PSI', 'OMEGA'];

            var cc_leetspeak_transform = {
                A: ['4', '@'],
                B: ['8'],
                C: ['('],
                D: null,
                E: ['3', '€', '&'],
                F: null,
                G: ['6', '9', '&'],
                H: ['4', '#'],
                I: ['1', '!'],
                J: null,
                K: null,
                L: ['1'],
                M: null,
                N: null,
                O: ['0'],
                P: null,
                Q: null,
                R: null,
                S: ['5', '$'],
                T: ['7', '+'],
                U: null,
                V: null,
                W: null,
                X: null,
                Y: null,
                Z: ['2'],
            };

            // string transform extensions
            String.implement({
                // random leetspeak
                rleetspeak: function(){
                    var chars = this.split('');

                    for (var i=0;i<chars.length;i++){
                        // transform probability 0.4
                        if (Number.random(0, 100) < 60){
                            continue;
                        }

                        // transform rules
                        var rule = cc_leetspeak_transform[chars[i].toUpperCase()];

                        // transform rule available ?
                        if (rule){
                            chars[i] = rule[Number.random(0, rule.length - 1)];
                        }
                    }

                    return chars.join('');
                }
            });


            // combined classes
            var cc_general = cc_general_uc.concat(cc_general_lc);
            var cc_all = cc_general.concat(cc_numbers).concat(cc_special);
            var cc_words = cc_greek.concat(cc_nato).concat(cc_numberstext);

            // Helper
            var getRandomByClass = (function(n, e){
                var c = '';
                for (var i=0;i<n;i++){
                    c += e[Number.random(0, e.length-1)];
                }
                return c;
            });
            var getRandomNumbers = (function(n){
                return getRandomByClass(n, cc_numbers);
            });
            var getRandomSpace = (function(n){
                return getRandomByClass(n, cc_special);
            });
            var getRandomLetter = (function(n){
                return getRandomByClass(n, cc_general);
            });
            var getRandomSign = (function(n){
                return getRandomByClass(n, cc_all);
            });


            // shortcut
            var _CC = getRandomByClass;



            // presets
            document.id('start').addEvent('click', function(){
                // output
                var output = '';

                // number of password suggestions per run
                for (var i=0;i<10;i++){
                    switch (document.id('presetList').value){
                        // algorithm selection
                        case 'n8':
                            output += getRandomNumbers(4) + '-' + getRandomNumbers(4);
                            break;
                        case 'n12':
                            output += getRandomNumbers(4) + '-' + getRandomNumbers(4) + '-' + getRandomNumbers(4);
                            break;
                        case 'i12':
                            output += getRandomLetter(5) +  getRandomNumbers(1) + getRandomSpace(1) + getRandomLetter(3) + getRandomNumbers(2);
                            break;
                        case 'i16':
                            output += getRandomLetter(4) + getRandomNumbers(2) + getRandomSpace(2) + getRandomNumbers(2) + getRandomSpace(1) + getRandomLetter(3) +getRandomNumbers(2);
                            break;
                        case 'i22':
                            output += getRandomLetter(4) + getRandomNumbers(2) + getRandomSpace(2) + getRandomLetter(6) + getRandomNumbers(3) + getRandomSpace(2) + getRandomNumbers(3);
                            break;
                        case 's12':
                            output += getRandomLetter(1) + getRandomSign(11);
                            break;
                        case 's18':
                            output += getRandomLetter(1) + getRandomSign(17);
                            break;
                        case 's26':
                            output += getRandomLetter(1) + getRandomSign(25);
                            break;
                        case 'h1':
                            output += _CC(1, cc_words) + getRandomSpace(1) + _CC(1, cc_words) + getRandomSpace(1) + getRandomLetter(1) + getRandomNumbers(2);
                            break;
                        case 'h2':
                            output += _CC(1, cc_words).toLowerCase().capitalize() + _CC(1, cc_words) + getRandomSpace(1) + _CC(1, cc_words).toLowerCase().capitalize() + getRandomSpace(1) + getRandomNumbers(2) + _CC(1, cc_words) + getRandomNumbers(2) + getRandomLetter(2);
                            break;
                        case 'h3':
                            output += _CC(1, cc_nato).rleetspeak() + getRandomSpace(1) + _CC(1, cc_words) + getRandomSpace(1) + getRandomLetter(1) + getRandomNumbers(2);
                            break;
                        case 'h4':
                            output += _CC(1, cc_words).toLowerCase().rleetspeak().capitalize() + _CC(1, cc_nato).rleetspeak() + getRandomSpace(1) + getRandomLetter(4)  + getRandomSpace(1) + _CC(1, cc_words);
                            break;
                    }

                    // append line break
                    output += "\n";
                }
                // set output
                document.id('output').set('value', output);
            });


        });
    </script>

</body>
</html>